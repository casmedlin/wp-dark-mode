/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/admin.js":
/*!****************************!*\
  !*** ./assets/js/admin.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(/*! ./components/slider */ "./assets/js/components/slider.js");

;

(function () {
  var app = {
    init: function init() {
      //handle switch click
      var darkmodeSwitch = document.querySelector('.wp-dark-mode-switch');

      if (darkmodeSwitch) {
        darkmodeSwitch.addEventListener('click', app.handleToggle);
      }

      app.initDarkmode();
      app.blockSwitches();
      app.blockPresets();
      app.checkCategories();
      app.checkDesc();
      app.checkFloating();
      app.checkSwitchDeps();
      app.checkCustomize();
      app.checkPresetDeps();
      app.checkTimeBasedDeps();
      app.checkSwitchMenu();
      app.checkSwitchText();
      app.checkSwitchIcon();
      var enable_frontend = document.querySelector('.enable_frontend input[type=checkbox]');

      if (enable_frontend) {
        enable_frontend.addEventListener('change', app.checkFloating);
      }

      var enable_darkmode_checkbox = document.querySelector('.enable_os_mode input[type=checkbox]');

      if (enable_darkmode_checkbox) {
        enable_darkmode_checkbox.addEventListener('change', app.checkDesc);
      }

      var show_switcher_checkbox = document.querySelector('.show_switcher input[type=checkbox]');

      if (show_switcher_checkbox) {
        show_switcher_checkbox.addEventListener('change', app.checkSwitchDeps);
      }

      var customize_colors_checkbox = document.querySelector('.customize_colors input[type=checkbox]');

      if (customize_colors_checkbox) {
        customize_colors_checkbox.addEventListener('change', app.checkCustomize);
      }

      var enable_preset_checkbox = document.querySelector('.enable_preset input[type=checkbox]');

      if (enable_preset_checkbox) {
        enable_preset_checkbox.addEventListener('change', app.checkPresetDeps);
      }

      var switch_menu_checkbox = document.querySelector('.enable_menu_switch input[type=checkbox]');

      if (switch_menu_checkbox) {
        switch_menu_checkbox.addEventListener('change', app.checkSwitchMenu);
      }

      var switch_text_checkbox = document.querySelector('.custom_switch_text input[type=checkbox]');

      if (switch_text_checkbox) {
        switch_text_checkbox.addEventListener('change', app.checkSwitchText);
      }

      var switch_icon_checkbox = document.querySelector('.custom_switch_icon input[type=checkbox]');

      if (switch_icon_checkbox) {
        switch_icon_checkbox.addEventListener('change', app.checkSwitchIcon);
      }

      var specific_cat = document.querySelector('.specific_category input[type=checkbox]');

      if (specific_cat) {
        specific_cat.addEventListener('change', app.checkCategories);
      }

      var tab_links = document.querySelectorAll('.tab-links .tab-link');
      tab_links.forEach(function (tab_link) {
        tab_link.addEventListener('click', function (e) {
          e.preventDefault();
          document.querySelectorAll('.tab-links .tab-link, .tab-content').forEach(function (active) {
            active.classList.remove('active');
          });
          tab_link.classList.add('active');
          var target = tab_link.getAttribute('href');
          document.querySelector("#".concat(target)).classList.add('active');
        });
      });
      document.querySelectorAll(".color-palette td").forEach(function (element) {
        element.classList.add('wp-dark-mode-ignore');
      });
      /**--- handle promo popups ---**/

      setTimeout(function () {
        return document.querySelectorAll('.image-choose-opt.disabled, .form-table tr.disabled').forEach(function (element) {
          element.addEventListener('click', app.showPopup);
        });
      }, 100);

      if (wpDarkMode.is_ultimate_active) {
        var _wpDarkMode$config = wpDarkMode.config,
            brightness = _wpDarkMode$config.brightness,
            contrast = _wpDarkMode$config.contrast,
            sepia = _wpDarkMode$config.sepia;
        DarkReader.enable({
          brightness: brightness,
          contrast: contrast,
          sepia: sepia
        });
      }
    },
    //handle switch toggle
    handleToggle: function handleToggle(e) {
      var html = document.querySelector('html');
      html.classList.toggle('wp-dark-mode-active');
      var is_saved = html.classList.contains('wp-dark-mode-active') ? 1 : 0;
      document.querySelector('.wp-dark-mode-switcher').classList.toggle('active');
      sessionStorage.setItem('wp_dark_mode_admin', is_saved);
      localStorage.setItem('wp_dark_mode_active', is_saved);
      window.dispatchEvent(new CustomEvent('wp_dark_mode', {
        active: is_saved
      }));
    },
    showPopup: function showPopup(e) {
      e.preventDefault();
      document.querySelector('.wp-dark-mode-promo').classList.remove('hidden');
    },
    initDarkmode: function initDarkmode() {
      var is_saved = sessionStorage.getItem('wp_dark_mode_admin');

      if (wpDarkMode.enable_backend && 1 == is_saved && !wpDarkMode.is_block_editor) {
        document.querySelector('html').classList.add('wp-dark-mode-active');
        document.querySelector('.wp-dark-mode-switcher').classList.add('active');
        window.dispatchEvent(new CustomEvent('wp_dark_mode', {
          active: is_saved
        }));
      }
    },
    blockSwitches: function blockSwitches() {
      if (wpDarkMode.is_pro_active || wpDarkMode.is_ultimate_active) {
        return;
      }

      var image_opts = document.querySelectorAll('.switch_style .image-choose-opt');
      image_opts.forEach(function (image_opt, i) {
        if (i < 2) {
          return;
        }

        image_opt.classList.add('disabled');
        var div = document.createElement('DIV');
        div.classList.add('disabled-text', 'wp-dark-mode-ignore');
        image_opt.appendChild(div);
      });
      document.querySelectorAll("\n                    .remember_darkmode,\n                    .start_at,\n                    .end_at,\n                    .specific_category,\n                    .time_based_mode,\n                    .custom_switch_icon,\n                    .switch_icon_light, \n                    .switch_icon_dark,\n                    .custom_switch_text,\n                   .switch_text_light, \n                   .switch_text_dark, \n                   .show_above_post, \n                   .show_above_page, \n                   .includes, \n                   .excludes, \n                   .exclude_pages, \n                   .exclude_pages, \n                   .enable_menu_switch, \n                   .switch_menus,\n                   .image_settings,\n                   .custom_css,\n                   .brightness,\n                   .contrast,\n                   .sepia\n                   ").forEach(function (element) {
        element.classList.add('disabled');
      });
    },
    blockPresets: function blockPresets() {
      if (wpDarkMode.is_pro_active || wpDarkMode.is_ultimate_active) {
        return;
      }

      var image_opts = document.querySelectorAll('.color_preset .image-choose-opt');
      image_opts.forEach(function (image_opt, i) {
        if (i < 2) {
          return;
        }

        image_opt.classList.add('disabled');
        var div = document.createElement('DIV');
        div.classList.add('disabled-text', 'wp-dark-mode-ignore');
        image_opt.appendChild(div);
      });
      var customize_colors_checkbox = document.querySelector('.customize_colors');

      if (customize_colors_checkbox) {
        customize_colors_checkbox.classList.add('disabled');
      }
    },
    checkFloating: function checkFloating() {
      var checkBox = document.querySelector('.enable_frontend input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_darkmode_enabled = checkBox.checked;

      if (is_darkmode_enabled) {
        document.querySelector('.show_switcher').style.display = 'revert';
      } else {
        document.querySelector('.show_switcher').style.display = 'none';
      }
    },
    checkDesc: function checkDesc() {
      var checkBox = document.querySelector('.enable_os_mode input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_darkmode_enabled = checkBox.checked;

      if (is_darkmode_enabled) {
        document.querySelector('.enable_os_mode .description').style.display = 'block';
      } else {
        document.querySelector('.enable_os_mode .description').style.display = 'none';
      }
    },
    checkSwitchDeps: function checkSwitchDeps() {
      var checkBox = document.querySelector('.show_switcher input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var checked = checkBox.checked;

      if (checked) {
        document.querySelector('.switcher_position, .switch_style').style.display = 'contents';
      } else {
        document.querySelector('.switcher_position, .switch_style').style.display = 'none';
      }
    },
    checkCustomize: function checkCustomize() {
      var checkBox = document.querySelector('.customize_colors input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_customized = checkBox.checked;
      var isPro = wpDarkMode.is_pro_active || wpDarkMode.is_ultimate_active;

      if (isPro && is_customized) {
        document.querySelectorAll('.darkmode_bg_color, .darkmode_text_color, .darkmode_link_color').forEach(function (element) {
          element.style.display = 'table-row';
        });
      } else {
        document.querySelectorAll('.darkmode_bg_color, .darkmode_text_color, .darkmode_link_color').forEach(function (element) {
          element.style.display = 'none';
        });
      }
    },
    checkPresetDeps: function checkPresetDeps() {
      var checkBox = document.querySelector('.enable_preset input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      if (checkBox.checked) {
        document.querySelector('.brightness').classList.add('hidden');
        document.querySelector('.contrast').classList.add('hidden');
        document.querySelector('.sepia').classList.add('hidden');
        document.querySelector('.filter_preview').classList.add('hidden');
        document.querySelector('.color_preset').classList.remove('hidden');
      } else {
        document.querySelector('.brightness').classList.remove('hidden');
        document.querySelector('.contrast').classList.remove('hidden');
        document.querySelector('.sepia').classList.remove('hidden');
        document.querySelector('.filter_preview').classList.remove('hidden');
        document.querySelector('.color_preset').classList.add('hidden');
      }
    },
    checkSwitchMenu: function checkSwitchMenu() {
      var checkBox = document.querySelector('.enable_menu_switch input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.switch_menus').style.display = 'table-row';
      } else {
        document.querySelector('.switch_menus').style.display = 'none';
      }
    },
    checkCategories: function checkCategories() {
      var checkBox = document.querySelector('.specific_category input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.specific_categories').style.display = 'table-row';
      } else {
        document.querySelector('.specific_categories').style.display = 'none';
      }
    },
    checkSwitchText: function checkSwitchText() {
      var checkBox = document.querySelector('.custom_switch_text input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.switch_text_light').style.display = 'table-row';
        document.querySelector('.switch_text_dark').style.display = 'table-row';
      } else {
        document.querySelector('.switch_text_light').style.display = 'none';
        document.querySelector('.switch_text_dark').style.display = 'none';
      }
    },
    checkSwitchIcon: function checkSwitchIcon() {
      var checkBox = document.querySelector('.custom_switch_icon input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.switch_icon_light').style.display = 'table-row';
        document.querySelector('.switch_icon_dark').style.display = 'table-row';
      } else {
        document.querySelector('.switch_icon_light').style.display = 'none';
        document.querySelector('.switch_icon_dark').style.display = 'none';
      }
    },
    checkTimeBasedDeps: function checkTimeBasedDeps() {
      var checkBox = document.querySelector('.time_based_mode input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      if (checkBox.checked) {
        document.querySelector('.start_at').classList.remove('hidden');
        document.querySelector('.end_at').classList.remove('hidden');
      } else {
        document.querySelector('.start_at').classList.add('hidden');
        document.querySelector('.end_at').classList.add('hidden');
      }
    }
  };
  document.addEventListener('DOMContentLoaded', app.init);
})();

/***/ }),

/***/ "./assets/js/components/slider.js":
/*!****************************************!*\
  !*** ./assets/js/components/slider.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


(function ($) {
  $(document).ready(function () {
    var sliders = $('.brightness, .contrast, .sepia');
    sliders.each(function () {
      var _this = this;

      var $slider = $(this).find('.wppool-slider');
      $slider.slider({
        slide: function slide(e, ui) {
          var handle = $(".wppool-slider-handle", $slider);
          $("input", $(_this)).val(ui.value);
          handle.text(ui.value);
          var brightness = $("[name='wp_dark_mode_color[brightness]']").val();
          var contrast = $("[name='wp_dark_mode_color[contrast]']").val();
          var sepia = $("[name='wp_dark_mode_color[sepia]']").val();
          DarkReader.enable({
            brightness: brightness,
            contrast: contrast,
            sepia: sepia
          });
        }
      });
    });
  });
})(jQuery);

/***/ }),

/***/ 0:
/*!**********************************!*\
  !*** multi ./assets/js/admin.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\wp-dark-mode\wp-content\plugins\wp-dark-mode\assets\js\admin.js */"./assets/js/admin.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
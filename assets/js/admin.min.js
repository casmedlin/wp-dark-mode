/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/admin.js":
/*!****************************!*\
  !*** ./assets/js/admin.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


;

(function () {
  var app = {
    init: function init() {
      //handle switch click
      var darkmodeSwitch = document.querySelector('.wp-dark-mode-switch');

      if (darkmodeSwitch) {
        darkmodeSwitch.addEventListener('click', app.handleToggle);
      }

      app.initDarkmode();
      app.blockSwitches();
      app.blockPresets();
      app.checkCategories();
      app.checkDesc();
      app.checkFloating();
      app.checkSwitchDeps();
      app.checkCustomize();
      app.checkPresetDeps();
      app.checkTimeBasedDeps();
      app.checkSwitchMenu();
      app.checkSwitchText();
      app.checkSwitchIcon();
      var enable_frontend = document.querySelector('.enable_frontend input[type=checkbox]');

      if (enable_frontend) {
        enable_frontend.addEventListener('change', app.checkFloating);
      }

      var enable_darkmode_checkbox = document.querySelector('.enable_os_mode input[type=checkbox]');

      if (enable_darkmode_checkbox) {
        enable_darkmode_checkbox.addEventListener('change', app.checkDesc);
      }

      var show_switcher_checkbox = document.querySelector('.show_switcher input[type=checkbox]');

      if (show_switcher_checkbox) {
        show_switcher_checkbox.addEventListener('change', app.checkSwitchDeps);
      }

      var customize_colors_checkbox = document.querySelector('.customize_colors input[type=checkbox]');

      if (customize_colors_checkbox) {
        customize_colors_checkbox.addEventListener('change', app.checkCustomize);
      }

      var enable_preset_checkbox = document.querySelector('.enable_preset input[type=checkbox]');

      if (enable_preset_checkbox) {
        enable_preset_checkbox.addEventListener('change', app.checkPresetDeps);
      }

      var switch_menu_checkbox = document.querySelector('.enable_menu_switch input[type=checkbox]');

      if (switch_menu_checkbox) {
        switch_menu_checkbox.addEventListener('change', app.checkSwitchMenu);
      }

      var switch_text_checkbox = document.querySelector('.custom_switch_text input[type=checkbox]');

      if (switch_text_checkbox) {
        switch_text_checkbox.addEventListener('change', app.checkSwitchText);
      }

      var switch_icon_checkbox = document.querySelector('.custom_switch_icon input[type=checkbox]');

      if (switch_icon_checkbox) {
        switch_icon_checkbox.addEventListener('change', app.checkSwitchIcon);
      }

      var specific_cat = document.querySelector('.specific_category input[type=checkbox]');

      if (specific_cat) {
        specific_cat.addEventListener('change', app.checkCategories);
      }

      var tab_links = document.querySelectorAll('.tab-links .tab-link');
      tab_links.forEach(function (tab_link) {
        tab_link.addEventListener('click', function (e) {
          e.preventDefault();
          document.querySelectorAll('.tab-links .tab-link, .tab-content').forEach(function (active) {
            active.classList.remove('active');
          });
          tab_link.classList.add('active');
          var target = tab_link.getAttribute('href');
          document.querySelector("#".concat(target)).classList.add('active');
        });
      });
      document.querySelectorAll(".color-palette td").forEach(function (element) {
        element.classList.add('wp-dark-mode-ignore');
      });
      /**--- license activate button --**/

      var activate_license = document.querySelector('.activate-license');

      if (activate_license) {
        activate_license.addEventListener('click', function () {
          var link = document.getElementById('wp_dark_mode_license-tab');

          if (link) {
            link.click();
          }
        });
      }
      /**--- handle promo popups ---**/


      document.querySelectorAll('.image-choose-opt.disabled, .form-table tr.disabled').forEach(function (element) {
        element.addEventListener('click', app.showPopup);
      });
    },
    //handle switch toggle
    handleToggle: function handleToggle(e) {
      var html = document.querySelector('html');
      html.classList.toggle('wp-dark-mode-active'); //app.checkDarkMode();

      var is_saved = html.classList.contains('wp-dark-mode-active') ? 1 : 0;
      document.querySelector('.wp-dark-mode-switcher').classList.toggle('active');
      sessionStorage.setItem('wp_dark_mode_admin', is_saved);
      localStorage.setItem('wp_dark_mode_active', is_saved);
      window.dispatchEvent(new CustomEvent('wp_dark_mode', {
        active: is_saved
      }));
    },
    showPopup: function showPopup(e) {
      e.preventDefault();
      document.querySelector('.wp-dark-mode-promo').classList.remove('hidden');
    },
    initDarkmode: function initDarkmode() {
      var is_saved = sessionStorage.getItem('wp_dark_mode_admin');

      if (wpDarkModeAdmin.enable_backend && 1 == is_saved && !wpDarkModeAdmin.is_block_editor) {
        document.querySelector('html').classList.add('wp-dark-mode-active');
        document.querySelector('.wp-dark-mode-switcher').classList.add('active');
        window.dispatchEvent(new CustomEvent('wp_dark_mode', {
          active: is_saved
        }));
      }
    },
    blockSwitches: function blockSwitches() {
      if (wpDarkModeAdmin.is_pro_active || wpDarkModeAdmin.is_ultimate_active) {
        return;
      }

      var image_opts = document.querySelectorAll('.switch_style .image-choose-opt');
      image_opts.forEach(function (image_opt, i) {
        if (i < 2) {
          return;
        }

        image_opt.classList.add('disabled');
        var div = document.createElement('DIV');
        div.classList.add('disabled-text', 'wp-dark-mode-ignore');
        image_opt.appendChild(div);
      });
      document.querySelectorAll("\n                    .remember_darkmode,\n                    .start_at,\n                    .end_at,\n                    .specific_category,\n                    .time_based_mode,\n                    .custom_switch_icon,\n                    .switch_icon_light, \n                    .switch_icon_dark,\n                    .custom_switch_text,\n                   .switch_text_light, \n                   .switch_text_dark, \n                   .show_above_post, \n                   .show_above_page, \n                   .excludes, \n                   .exclude_pages, \n                   .exclude_pages, \n                   .enable_menu_switch, \n                   .switch_menus,\n                   .image_settings,\n                   .custom_css\n                   ").forEach(function (element) {
        element.classList.add('disabled');
      });
    },
    blockPresets: function blockPresets() {
      if (wpDarkModeAdmin.is_pro_active || wpDarkModeAdmin.is_ultimate_active) {
        return;
      }

      var image_opts = document.querySelectorAll('.color_preset .image-choose-opt');
      image_opts.forEach(function (image_opt, i) {
        if (i < 2) {
          return;
        }

        image_opt.classList.add('disabled');
        var div = document.createElement('DIV');
        div.classList.add('disabled-text', 'wp-dark-mode-ignore');
        image_opt.appendChild(div);
      });
      var customize_colors_checkbox = document.querySelector('.customize_colors');

      if (customize_colors_checkbox) {
        customize_colors_checkbox.classList.add('disabled');
      }
    },
    checkFloating: function checkFloating() {
      var checkBox = document.querySelector('.enable_frontend input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_darkmode_enabled = checkBox.checked;

      if (is_darkmode_enabled) {
        document.querySelector('.show_switcher').style.display = 'revert';
      } else {
        document.querySelector('.show_switcher').style.display = 'none';
      }
    },
    checkDesc: function checkDesc() {
      var checkBox = document.querySelector('.enable_os_mode input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_darkmode_enabled = checkBox.checked;

      if (is_darkmode_enabled) {
        document.querySelector('.enable_os_mode .description').style.display = 'block';
      } else {
        document.querySelector('.enable_os_mode .description').style.display = 'none';
      }
    },
    checkSwitchDeps: function checkSwitchDeps() {
      var checkBox = document.querySelector('.show_switcher input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var checked = checkBox.checked;

      if (checked) {
        document.querySelector('.switcher_position, .switch_style').style.display = 'contents';
      } else {
        document.querySelector('.switcher_position, .switch_style').style.display = 'none';
      }
    },
    checkCustomize: function checkCustomize() {
      var checkBox = document.querySelector('.customize_colors input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_customized = checkBox.checked;
      var isPro = wpDarkModeAdmin.is_pro_active || wpDarkModeAdmin.is_ultimate_active;

      if (isPro && is_customized) {
        document.querySelectorAll('.darkmode_bg_color, .darkmode_text_color, .darkmode_link_color').forEach(function (element) {
          element.style.display = 'table-row';
        });
      } else {
        document.querySelectorAll('.darkmode_bg_color, .darkmode_text_color, .darkmode_link_color').forEach(function (element) {
          element.style.display = 'none';
        });
      }
    },
    checkPresetDeps: function checkPresetDeps() {
      var checkBox = document.querySelector('.enable_preset input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      if (checkBox.checked) {
        document.querySelector('.color_preset').classList.remove('hidden');
      } else {
        document.querySelector('.color_preset').classList.add('hidden');
      }
    },
    checkSwitchMenu: function checkSwitchMenu() {
      var checkBox = document.querySelector('.enable_menu_switch input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.switch_menus').style.display = 'table-row';
      } else {
        document.querySelector('.switch_menus').style.display = 'none';
      }
    },
    checkCategories: function checkCategories() {
      var checkBox = document.querySelector('.specific_category input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.specific_categories').style.display = 'table-row';
      } else {
        document.querySelector('.specific_categories').style.display = 'none';
      }
    },
    checkSwitchText: function checkSwitchText() {
      var checkBox = document.querySelector('.custom_switch_text input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.switch_text_light').style.display = 'table-row';
        document.querySelector('.switch_text_dark').style.display = 'table-row';
      } else {
        document.querySelector('.switch_text_light').style.display = 'none';
        document.querySelector('.switch_text_dark').style.display = 'none';
      }
    },
    checkSwitchIcon: function checkSwitchIcon() {
      var checkBox = document.querySelector('.custom_switch_icon input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      var is_on = checkBox.checked;

      if (is_on) {
        document.querySelector('.switch_icon_light').style.display = 'table-row';
        document.querySelector('.switch_icon_dark').style.display = 'table-row';
      } else {
        document.querySelector('.switch_icon_light').style.display = 'none';
        document.querySelector('.switch_icon_dark').style.display = 'none';
      }
    },
    checkTimeBasedDeps: function checkTimeBasedDeps() {
      var checkBox = document.querySelector('.time_based_mode input[type=checkbox]');

      if (!checkBox) {
        return;
      }

      if (checkBox.checked) {
        document.querySelector('.start_at').classList.remove('hidden');
        document.querySelector('.end_at').classList.remove('hidden');
      } else {
        document.querySelector('.start_at').classList.add('hidden');
        document.querySelector('.end_at').classList.add('hidden');
      }
    }
  };
  document.addEventListener('DOMContentLoaded', app.init);
})();

/***/ }),

/***/ 0:
/*!**********************************!*\
  !*** multi ./assets/js/admin.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\wp-dark-mode\wp-content\plugins\wp-dark-mode\assets\js\admin.js */"./assets/js/admin.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL2FkbWluLmpzIl0sIm5hbWVzIjpbImFwcCIsImluaXQiLCJkYXJrbW9kZVN3aXRjaCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVUb2dnbGUiLCJpbml0RGFya21vZGUiLCJibG9ja1N3aXRjaGVzIiwiYmxvY2tQcmVzZXRzIiwiY2hlY2tDYXRlZ29yaWVzIiwiY2hlY2tEZXNjIiwiY2hlY2tGbG9hdGluZyIsImNoZWNrU3dpdGNoRGVwcyIsImNoZWNrQ3VzdG9taXplIiwiY2hlY2tQcmVzZXREZXBzIiwiY2hlY2tUaW1lQmFzZWREZXBzIiwiY2hlY2tTd2l0Y2hNZW51IiwiY2hlY2tTd2l0Y2hUZXh0IiwiY2hlY2tTd2l0Y2hJY29uIiwiZW5hYmxlX2Zyb250ZW5kIiwiZW5hYmxlX2Rhcmttb2RlX2NoZWNrYm94Iiwic2hvd19zd2l0Y2hlcl9jaGVja2JveCIsImN1c3RvbWl6ZV9jb2xvcnNfY2hlY2tib3giLCJlbmFibGVfcHJlc2V0X2NoZWNrYm94Iiwic3dpdGNoX21lbnVfY2hlY2tib3giLCJzd2l0Y2hfdGV4dF9jaGVja2JveCIsInN3aXRjaF9pY29uX2NoZWNrYm94Iiwic3BlY2lmaWNfY2F0IiwidGFiX2xpbmtzIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJ0YWJfbGluayIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImFjdGl2ZSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsImVsZW1lbnQiLCJhY3RpdmF0ZV9saWNlbnNlIiwibGluayIsImdldEVsZW1lbnRCeUlkIiwiY2xpY2siLCJzaG93UG9wdXAiLCJodG1sIiwidG9nZ2xlIiwiaXNfc2F2ZWQiLCJjb250YWlucyIsInNlc3Npb25TdG9yYWdlIiwic2V0SXRlbSIsImxvY2FsU3RvcmFnZSIsIndpbmRvdyIsImRpc3BhdGNoRXZlbnQiLCJDdXN0b21FdmVudCIsImdldEl0ZW0iLCJ3cERhcmtNb2RlQWRtaW4iLCJlbmFibGVfYmFja2VuZCIsImlzX2Jsb2NrX2VkaXRvciIsImlzX3Byb19hY3RpdmUiLCJpc191bHRpbWF0ZV9hY3RpdmUiLCJpbWFnZV9vcHRzIiwiaW1hZ2Vfb3B0IiwiaSIsImRpdiIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsImNoZWNrQm94IiwiaXNfZGFya21vZGVfZW5hYmxlZCIsImNoZWNrZWQiLCJzdHlsZSIsImRpc3BsYXkiLCJpc19jdXN0b21pemVkIiwiaXNQcm8iLCJpc19vbiJdLCJtYXBwaW5ncyI6IjtRQUFBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxrQkFBa0I7UUFDMUU7UUFDQSxpREFBaUQsY0FBYztRQUMvRDs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0EseUNBQXlDLGlDQUFpQztRQUMxRSxnSEFBZ0gsbUJBQW1CLEVBQUU7UUFDckk7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwyQkFBMkIsMEJBQTBCLEVBQUU7UUFDdkQsaUNBQWlDLGVBQWU7UUFDaEQ7UUFDQTtRQUNBOztRQUVBO1FBQ0Esc0RBQXNELCtEQUErRDs7UUFFckg7UUFDQTs7O1FBR0E7UUFDQTs7Ozs7Ozs7Ozs7Ozs7O0FDbEZBOztBQUFDLENBQUMsWUFBWTtBQUVWLE1BQU1BLEdBQUcsR0FBRztBQUNSQyxRQUFJLEVBQUUsZ0JBQU07QUFFUjtBQUNBLFVBQU1DLGNBQWMsR0FBR0MsUUFB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LEVBQUUsOEJBQVk7QUFFNUIsVUFBTXFELFFBQVEsR0FBR2xFLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1Qix1Q0FBdkIsQ0FBakI7O0FBQ0EsVUFBSSxDQUFDaUUsUUFBTCxFQUFlO0FBQ1g7QUFDSDs7QUFFRCxVQUFJQSxRQUFRLENBQUNFLE9BQWIsRUFBc0I7QUFDbEJwRSxnQkFBUSxDQUFDQyxhQUFULENBQXVCLFdBQXZCLEVBQW9DZ0MsU0FBcEMsQ0FBOENDLE1BQTlDLENBQXFELFFBQXJEO0FBQ0FsQyxnQkFBUSxDQUFDQyxhQUFULENBQXVCLFNBQXZCLEVBQWtDZ0MsU0FBbEMsQ0FBNENDLE1BQTVDLENBQW1ELFFBQW5EO0FBQ0gsT0FIRCxNQUdPO0FBQ0hsQyxnQkFBUSxDQUFDQyxhQUFULENBQXVCLFdBQXZCLEVBQW9DZ0MsU0FBcEMsQ0FBOENFLEdBQTlDLENBQWtELFFBQWxEO0FBQ0FuQyxnQkFBUSxDQUFDQyxhQUFULENBQXVCLFNBQXZCLEVBQWtDZ0MsU0FBbEMsQ0FBNENFLEdBQTVDLENBQWdELFFBQWhEO0FBQ0g7QUFDSjtBQTlXTyxHQUFaO0FBa1hBbkMsVUFBUSxDQUFDRSxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOENMLEdBQUcsQ0FBQ0MsSUFBbEQ7QUFFSCxDQXRYQSxJIiwiZmlsZSI6ImFkbWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiOyhmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgY29uc3QgYXBwID0ge1xyXG4gICAgICAgIGluaXQ6ICgpID0+IHtcclxuXHJcbiAgICAgICAgICAgIC8vaGFuZGxlIHN3aXRjaCBjbGlja1xyXG4gICAgICAgICAgICBjb25zdCBkYXJrbW9kZVN3aXRjaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53cC1kYXJrLW1vZGUtc3dpdGNoJyk7XHJcbiAgICAgICAgICAgIGlmIChkYXJrbW9kZVN3aXRjaCkge1xyXG4gICAgICAgICAgICAgICAgZGFya21vZGVTd2l0Y2guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhcHAuaGFuZGxlVG9nZ2xlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgYXBwLmluaXREYXJrbW9kZSgpO1xyXG4gICAgICAgICAgICBhcHAuYmxvY2tTd2l0Y2hlcygpO1xyXG4gICAgICAgICAgICBhcHAuYmxvY2tQcmVzZXRzKCk7XHJcbiAgICAgICAgICAgIGFwcC5jaGVja0NhdGVnb3JpZXMoKTtcclxuXHJcbiAgICAgICAgICAgIGFwcC5jaGVja0Rlc2MoKTtcclxuICAgICAgICAgICAgYXBwLmNoZWNrRmxvYXRpbmcoKTtcclxuICAgICAgICAgICAgYXBwLmNoZWNrU3dpdGNoRGVwcygpO1xyXG4gICAgICAgICAgICBhcHAuY2hlY2tDdXN0b21pemUoKTtcclxuICAgICAgICAgICAgYXBwLmNoZWNrUHJlc2V0RGVwcygpO1xyXG4gICAgICAgICAgICBhcHAuY2hlY2tUaW1lQmFzZWREZXBzKCk7XHJcblxyXG4gICAgICAgICAgICBhcHAuY2hlY2tTd2l0Y2hNZW51KCk7XHJcbiAgICAgICAgICAgIGFwcC5jaGVja1N3aXRjaFRleHQoKTtcclxuICAgICAgICAgICAgYXBwLmNoZWNrU3dpdGNoSWNvbigpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgZW5hYmxlX2Zyb250ZW5kID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVuYWJsZV9mcm9udGVuZCBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoZW5hYmxlX2Zyb250ZW5kKSB7XHJcbiAgICAgICAgICAgICAgICBlbmFibGVfZnJvbnRlbmQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgYXBwLmNoZWNrRmxvYXRpbmcpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb25zdCBlbmFibGVfZGFya21vZGVfY2hlY2tib3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZW5hYmxlX29zX21vZGUgaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICAgICAgICAgICAgaWYgKGVuYWJsZV9kYXJrbW9kZV9jaGVja2JveCkge1xyXG4gICAgICAgICAgICAgICAgZW5hYmxlX2Rhcmttb2RlX2NoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGFwcC5jaGVja0Rlc2MpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb25zdCBzaG93X3N3aXRjaGVyX2NoZWNrYm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNob3dfc3dpdGNoZXIgaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICAgICAgICAgICAgaWYgKHNob3dfc3dpdGNoZXJfY2hlY2tib3gpIHtcclxuICAgICAgICAgICAgICAgIHNob3dfc3dpdGNoZXJfY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgYXBwLmNoZWNrU3dpdGNoRGVwcyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGN1c3RvbWl6ZV9jb2xvcnNfY2hlY2tib3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3VzdG9taXplX2NvbG9ycyBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoY3VzdG9taXplX2NvbG9yc19jaGVja2JveCkge1xyXG4gICAgICAgICAgICAgICAgY3VzdG9taXplX2NvbG9yc19jaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBhcHAuY2hlY2tDdXN0b21pemUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb25zdCBlbmFibGVfcHJlc2V0X2NoZWNrYm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVuYWJsZV9wcmVzZXQgaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICAgICAgICAgICAgaWYgKGVuYWJsZV9wcmVzZXRfY2hlY2tib3gpIHtcclxuICAgICAgICAgICAgICAgIGVuYWJsZV9wcmVzZXRfY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgYXBwLmNoZWNrUHJlc2V0RGVwcyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHN3aXRjaF9tZW51X2NoZWNrYm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVuYWJsZV9tZW51X3N3aXRjaCBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoc3dpdGNoX21lbnVfY2hlY2tib3gpIHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaF9tZW51X2NoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGFwcC5jaGVja1N3aXRjaE1lbnUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb25zdCBzd2l0Y2hfdGV4dF9jaGVja2JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdXN0b21fc3dpdGNoX3RleHQgaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICAgICAgICAgICAgaWYgKHN3aXRjaF90ZXh0X2NoZWNrYm94KSB7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2hfdGV4dF9jaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBhcHAuY2hlY2tTd2l0Y2hUZXh0KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29uc3Qgc3dpdGNoX2ljb25fY2hlY2tib3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3VzdG9tX3N3aXRjaF9pY29uIGlucHV0W3R5cGU9Y2hlY2tib3hdJyk7XHJcbiAgICAgICAgICAgIGlmIChzd2l0Y2hfaWNvbl9jaGVja2JveCkge1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoX2ljb25fY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgYXBwLmNoZWNrU3dpdGNoSWNvbik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICAgICBjb25zdCBzcGVjaWZpY19jYXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3BlY2lmaWNfY2F0ZWdvcnkgaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICAgICAgICAgICAgaWYgKHNwZWNpZmljX2NhdCkge1xyXG4gICAgICAgICAgICAgICAgc3BlY2lmaWNfY2F0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGFwcC5jaGVja0NhdGVnb3JpZXMpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb25zdCB0YWJfbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGFiLWxpbmtzIC50YWItbGluaycpO1xyXG4gICAgICAgICAgICB0YWJfbGlua3MuZm9yRWFjaCgodGFiX2xpbmspID0+IHtcclxuICAgICAgICAgICAgICAgIHRhYl9saW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YWItbGlua3MgLnRhYi1saW5rLCAudGFiLWNvbnRlbnQnKS5mb3JFYWNoKGFjdGl2ZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdGFiX2xpbmsuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IHRhYl9saW5rLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3RhcmdldH1gKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuY29sb3ItcGFsZXR0ZSB0ZGApLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnd3AtZGFyay1tb2RlLWlnbm9yZScpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8qKi0tLSBsaWNlbnNlIGFjdGl2YXRlIGJ1dHRvbiAtLSoqL1xyXG4gICAgICAgICAgICBjb25zdCBhY3RpdmF0ZV9saWNlbnNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFjdGl2YXRlLWxpY2Vuc2UnKTtcclxuICAgICAgICAgICAgaWYgKGFjdGl2YXRlX2xpY2Vuc2UpIHtcclxuICAgICAgICAgICAgICAgIGFjdGl2YXRlX2xpY2Vuc2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3cF9kYXJrX21vZGVfbGljZW5zZS10YWInKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobGluaykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5rLmNsaWNrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8qKi0tLSBoYW5kbGUgcHJvbW8gcG9wdXBzIC0tLSoqL1xyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaW1hZ2UtY2hvb3NlLW9wdC5kaXNhYmxlZCwgLmZvcm0tdGFibGUgdHIuZGlzYWJsZWQnKS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXBwLnNob3dQb3B1cCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgLy9oYW5kbGUgc3dpdGNoIHRvZ2dsZVxyXG4gICAgICAgIGhhbmRsZVRvZ2dsZTogZnVuY3Rpb24gKGUpIHtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGh0bWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdodG1sJyk7XHJcbiAgICAgICAgICAgIGh0bWwuY2xhc3NMaXN0LnRvZ2dsZSgnd3AtZGFyay1tb2RlLWFjdGl2ZScpO1xyXG5cclxuICAgICAgICAgICAgLy9hcHAuY2hlY2tEYXJrTW9kZSgpO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgaXNfc2F2ZWQgPSBodG1sLmNsYXNzTGlzdC5jb250YWlucygnd3AtZGFyay1tb2RlLWFjdGl2ZScpID8gMSA6IDA7XHJcblxyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud3AtZGFyay1tb2RlLXN3aXRjaGVyJykuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XHJcblxyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd3cF9kYXJrX21vZGVfYWRtaW4nLCBpc19zYXZlZCk7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd3cF9kYXJrX21vZGVfYWN0aXZlJywgaXNfc2F2ZWQpO1xyXG5cclxuICAgICAgICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCd3cF9kYXJrX21vZGUnLCB7YWN0aXZlOiBpc19zYXZlZH0pKTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBzaG93UG9wdXA6IChlKSA9PiB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53cC1kYXJrLW1vZGUtcHJvbW8nKS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBpbml0RGFya21vZGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc3QgaXNfc2F2ZWQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd3cF9kYXJrX21vZGVfYWRtaW4nKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh3cERhcmtNb2RlQWRtaW4uZW5hYmxlX2JhY2tlbmQgJiYgMSA9PSBpc19zYXZlZCAmJiAhd3BEYXJrTW9kZUFkbWluLmlzX2Jsb2NrX2VkaXRvcikge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaHRtbCcpLmNsYXNzTGlzdC5hZGQoJ3dwLWRhcmstbW9kZS1hY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53cC1kYXJrLW1vZGUtc3dpdGNoZXInKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHJcbiAgICAgICAgICAgICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ3dwX2RhcmtfbW9kZScsIHthY3RpdmU6IGlzX3NhdmVkfSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgYmxvY2tTd2l0Y2hlczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAod3BEYXJrTW9kZUFkbWluLmlzX3Byb19hY3RpdmUgfHwgd3BEYXJrTW9kZUFkbWluLmlzX3VsdGltYXRlX2FjdGl2ZSkge1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29uc3QgaW1hZ2Vfb3B0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zd2l0Y2hfc3R5bGUgLmltYWdlLWNob29zZS1vcHQnKTtcclxuICAgICAgICAgICAgaW1hZ2Vfb3B0cy5mb3JFYWNoKChpbWFnZV9vcHQsIGkpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpIDwgMikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGltYWdlX29wdC5jbGFzc0xpc3QuYWRkKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnRElWJyk7XHJcbiAgICAgICAgICAgICAgICBkaXYuY2xhc3NMaXN0LmFkZCgnZGlzYWJsZWQtdGV4dCcsICd3cC1kYXJrLW1vZGUtaWdub3JlJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgaW1hZ2Vfb3B0LmFwcGVuZENoaWxkKGRpdik7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbWVtYmVyX2Rhcmttb2RlLFxyXG4gICAgICAgICAgICAgICAgICAgIC5zdGFydF9hdCxcclxuICAgICAgICAgICAgICAgICAgICAuZW5kX2F0LFxyXG4gICAgICAgICAgICAgICAgICAgIC5zcGVjaWZpY19jYXRlZ29yeSxcclxuICAgICAgICAgICAgICAgICAgICAudGltZV9iYXNlZF9tb2RlLFxyXG4gICAgICAgICAgICAgICAgICAgIC5jdXN0b21fc3dpdGNoX2ljb24sXHJcbiAgICAgICAgICAgICAgICAgICAgLnN3aXRjaF9pY29uX2xpZ2h0LCBcclxuICAgICAgICAgICAgICAgICAgICAuc3dpdGNoX2ljb25fZGFyayxcclxuICAgICAgICAgICAgICAgICAgICAuY3VzdG9tX3N3aXRjaF90ZXh0LFxyXG4gICAgICAgICAgICAgICAgICAgLnN3aXRjaF90ZXh0X2xpZ2h0LCBcclxuICAgICAgICAgICAgICAgICAgIC5zd2l0Y2hfdGV4dF9kYXJrLCBcclxuICAgICAgICAgICAgICAgICAgIC5zaG93X2Fib3ZlX3Bvc3QsIFxyXG4gICAgICAgICAgICAgICAgICAgLnNob3dfYWJvdmVfcGFnZSwgXHJcbiAgICAgICAgICAgICAgICAgICAuZXhjbHVkZXMsIFxyXG4gICAgICAgICAgICAgICAgICAgLmV4Y2x1ZGVfcGFnZXMsIFxyXG4gICAgICAgICAgICAgICAgICAgLmV4Y2x1ZGVfcGFnZXMsIFxyXG4gICAgICAgICAgICAgICAgICAgLmVuYWJsZV9tZW51X3N3aXRjaCwgXHJcbiAgICAgICAgICAgICAgICAgICAuc3dpdGNoX21lbnVzLFxyXG4gICAgICAgICAgICAgICAgICAgLmltYWdlX3NldHRpbmdzLFxyXG4gICAgICAgICAgICAgICAgICAgLmN1c3RvbV9jc3NcclxuICAgICAgICAgICAgICAgICAgIGApLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgYmxvY2tQcmVzZXRzOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICBpZiAod3BEYXJrTW9kZUFkbWluLmlzX3Byb19hY3RpdmUgfHwgd3BEYXJrTW9kZUFkbWluLmlzX3VsdGltYXRlX2FjdGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb25zdCBpbWFnZV9vcHRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbG9yX3ByZXNldCAuaW1hZ2UtY2hvb3NlLW9wdCcpO1xyXG4gICAgICAgICAgICBpbWFnZV9vcHRzLmZvckVhY2goKGltYWdlX29wdCwgaSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGkgPCAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaW1hZ2Vfb3B0LmNsYXNzTGlzdC5hZGQoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdESVYnKTtcclxuICAgICAgICAgICAgICAgIGRpdi5jbGFzc0xpc3QuYWRkKCdkaXNhYmxlZC10ZXh0JywgJ3dwLWRhcmstbW9kZS1pZ25vcmUnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpbWFnZV9vcHQuYXBwZW5kQ2hpbGQoZGl2KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBjdXN0b21pemVfY29sb3JzX2NoZWNrYm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN1c3RvbWl6ZV9jb2xvcnMnKTtcclxuICAgICAgICAgICAgaWYgKGN1c3RvbWl6ZV9jb2xvcnNfY2hlY2tib3gpIHtcclxuICAgICAgICAgICAgICAgIGN1c3RvbWl6ZV9jb2xvcnNfY2hlY2tib3guY2xhc3NMaXN0LmFkZCgnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGNoZWNrRmxvYXRpbmc6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZW5hYmxlX2Zyb250ZW5kIGlucHV0W3R5cGU9Y2hlY2tib3hdJyk7XHJcbiAgICAgICAgICAgIGlmICghY2hlY2tCb3gpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBpc19kYXJrbW9kZV9lbmFibGVkID0gY2hlY2tCb3guY2hlY2tlZDtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc19kYXJrbW9kZV9lbmFibGVkKSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2hvd19zd2l0Y2hlcicpLnN0eWxlLmRpc3BsYXkgPSAncmV2ZXJ0JztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaG93X3N3aXRjaGVyJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGNoZWNrRGVzYzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjb25zdCBjaGVja0JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbmFibGVfb3NfbW9kZSBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoIWNoZWNrQm94KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgaXNfZGFya21vZGVfZW5hYmxlZCA9IGNoZWNrQm94LmNoZWNrZWQ7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNfZGFya21vZGVfZW5hYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVuYWJsZV9vc19tb2RlIC5kZXNjcmlwdGlvbicpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVuYWJsZV9vc19tb2RlIC5kZXNjcmlwdGlvbicpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjaGVja1N3aXRjaERlcHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2hvd19zd2l0Y2hlciBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoIWNoZWNrQm94KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgY2hlY2tlZCA9IGNoZWNrQm94LmNoZWNrZWQ7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2hlY2tlZCkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN3aXRjaGVyX3Bvc2l0aW9uLCAuc3dpdGNoX3N0eWxlJykuc3R5bGUuZGlzcGxheSA9ICdjb250ZW50cyc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3dpdGNoZXJfcG9zaXRpb24sIC5zd2l0Y2hfc3R5bGUnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgY2hlY2tDdXN0b21pemU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3VzdG9taXplX2NvbG9ycyBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoIWNoZWNrQm94KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGlzX2N1c3RvbWl6ZWQgPSBjaGVja0JveC5jaGVja2VkO1xyXG5cclxuICAgICAgICAgICAgY29uc3QgaXNQcm8gPSB3cERhcmtNb2RlQWRtaW4uaXNfcHJvX2FjdGl2ZSB8fCB3cERhcmtNb2RlQWRtaW4uaXNfdWx0aW1hdGVfYWN0aXZlO1xyXG5cclxuICAgICAgICAgICAgaWYgKGlzUHJvICYmIGlzX2N1c3RvbWl6ZWQpIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kYXJrbW9kZV9iZ19jb2xvciwgLmRhcmttb2RlX3RleHRfY29sb3IsIC5kYXJrbW9kZV9saW5rX2NvbG9yJykuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICd0YWJsZS1yb3cnO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGFya21vZGVfYmdfY29sb3IsIC5kYXJrbW9kZV90ZXh0X2NvbG9yLCAuZGFya21vZGVfbGlua19jb2xvcicpLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGNoZWNrUHJlc2V0RGVwczogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZW5hYmxlX3ByZXNldCBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoIWNoZWNrQm94KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChjaGVja0JveC5jaGVja2VkKSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29sb3JfcHJlc2V0JykuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29sb3JfcHJlc2V0JykuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjaGVja1N3aXRjaE1lbnU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZW5hYmxlX21lbnVfc3dpdGNoIGlucHV0W3R5cGU9Y2hlY2tib3hdJyk7XHJcbiAgICAgICAgICAgIGlmICghY2hlY2tCb3gpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBpc19vbiA9IGNoZWNrQm94LmNoZWNrZWQ7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNfb24pIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zd2l0Y2hfbWVudXMnKS5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlLXJvdyc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3dpdGNoX21lbnVzJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGNoZWNrQ2F0ZWdvcmllczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjb25zdCBjaGVja0JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zcGVjaWZpY19jYXRlZ29yeSBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICAgICAgICBpZiAoIWNoZWNrQm94KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGlzX29uID0gY2hlY2tCb3guY2hlY2tlZDtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc19vbikge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNwZWNpZmljX2NhdGVnb3JpZXMnKS5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlLXJvdyc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3BlY2lmaWNfY2F0ZWdvcmllcycpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjaGVja1N3aXRjaFRleHQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3VzdG9tX3N3aXRjaF90ZXh0IGlucHV0W3R5cGU9Y2hlY2tib3hdJyk7XHJcbiAgICAgICAgICAgIGlmICghY2hlY2tCb3gpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBpc19vbiA9IGNoZWNrQm94LmNoZWNrZWQ7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNfb24pIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zd2l0Y2hfdGV4dF9saWdodCcpLnN0eWxlLmRpc3BsYXkgPSAndGFibGUtcm93JztcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zd2l0Y2hfdGV4dF9kYXJrJykuc3R5bGUuZGlzcGxheSA9ICd0YWJsZS1yb3cnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN3aXRjaF90ZXh0X2xpZ2h0Jykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zd2l0Y2hfdGV4dF9kYXJrJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGNoZWNrU3dpdGNoSWNvbjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjb25zdCBjaGVja0JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdXN0b21fc3dpdGNoX2ljb24gaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICAgICAgICAgICAgaWYgKCFjaGVja0JveCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IGlzX29uID0gY2hlY2tCb3guY2hlY2tlZDtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc19vbikge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN3aXRjaF9pY29uX2xpZ2h0Jykuc3R5bGUuZGlzcGxheSA9ICd0YWJsZS1yb3cnO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN3aXRjaF9pY29uX2RhcmsnKS5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlLXJvdyc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3dpdGNoX2ljb25fbGlnaHQnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN3aXRjaF9pY29uX2RhcmsnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgY2hlY2tUaW1lQmFzZWREZXBzOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBjaGVja0JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aW1lX2Jhc2VkX21vZGUgaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICAgICAgICAgICAgaWYgKCFjaGVja0JveCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoY2hlY2tCb3guY2hlY2tlZCkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0YXJ0X2F0JykuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZW5kX2F0JykuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3RhcnRfYXQnKS5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbmRfYXQnKS5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgfTtcclxuXHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgYXBwLmluaXQpO1xyXG5cclxufSkoKTsiXSwic291cmNlUm9vdCI6IiJ9